---
- name: Install git-delta on debian systems
  block:
    - name: Check if git-delta is installed by calling delta --version
      command: delta --version
      register: git_delta_check
      failed_when: false
      changed_when: false
  
    - name: Check version of git-delta currently installed
      set_fact:
        old_version: true
      when:
        - git_delta_check.rc == 0 and git_delta_check.stdout.split()[1] is version(git_delta_version, '<')

    - name: Download and install newest version of git-delta
      block:
        - name: Get dpkg architecture
          command: dpkg --print-architecture
          register: dpkg_arch_result

        - name: Set dpkg architecture to a variable
          set_fact:
            deb_architecture: "{{ dpkg_arch_result.stdout }}"
            
        - name: set git_delta_binary
          set_fact:
            git_delta_binary: "git-delta_{{ git_delta_version }}_{{ deb_architecture }}.deb"

        - name: Download git-delta debian package
          get_url: 
            url: "https://github.com/dandavison/delta/releases/download/{{ git_delta_version }}/{{ git_delta_binary }}"
            dest: "/tmp/{{ ansible_env.USER }}_git-delta.deb"
            checksum: 'sha256:{{ sha256_map[git_delta_binary] }}'
        
        - name: Install git-delta binary
          apt: deb="/tmp/{{ ansible_env.USER }}_git-delta.deb"
          become: true

      when: git_delta_check.rc != 0 or old_version is defined

  when: ansible_os_family|lower == 'debian'

- name: Install git-delta (homebrew)
  homebrew:
    name: git-delta
    state: present
  when: ansible_os_family|lower == 'darwin'


- name: Set global git interactive.diffFilter
  git_config:
    name: interactive.diffFilter
    scope: global
    value: delta --color-only

- name: set global git core.pager
  git_config:
    name: core.pager
    scope: global
    value: delta
